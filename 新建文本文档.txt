 keepalived 
NGINX 反向代理   默认全在http协议里面
nginx  [调度器] 算法:轮询   ,  ip_hash(相同客户端访问相同服务器)

                                              -------web 1
a                                           |
    user  -------------proxy --- |
                                             |
b                                            --------web2

NGINX支持   四层 TCP/UDP  代理的服务

需要使用--with-stream 模块 开启4层代理  

http调度
  upstream webs  {
      ip_hash; (相同客户端访问相同服务器)
   server  ip      weight  max_fails fail_timeout;
   server  ip
}

  server {
     listen 80;
     server_name;
     proxy_pass http://webs;
}


TCP/udp 调度

--with-stream 模块

stream {
      upstream ssh {
         server  ip;      
         server  ip;
 }     
         server {
              listen 12345:
              proxy_pass ssh;           
          }
}

smb.conf
 [common]
 path=/common
 write_list = tom

防火墙  selinux  文件本身的权限  服务本身的权限

NGINX  优化  

1. [root@proxy ~]# vim /usr/local/nginx/conf/nginx.conf
.. ..
worker_processes  2;                    //与CPU核心数量一致
events {
worker_connections 65535;        //每个worker最大并发连接数
use epoll;
}


2. limit   最大文件数量
[root@proxy ~]# ulimit -a                        //查看所有属性值
[root@proxy ~]# ulimit -Hn 100000                //设置硬限制（临时规则）
[root@proxy ~]# ulimit -Sn 100000                //设置软限制（临时规则）
[root@proxy ~]# vim /etc/security/limits.conf
    .. ..
*               soft    nofile            100000
*               hard    nofile            100000

3. buffer  414


http {
client_header_buffer_size    1k;        //默认请求包头信息的缓存    
large_client_header_buffers  4 4k;        //大请求包头部信息的缓存个数与容量

4.浏览器本地缓存静态数据    （只适合静态数据，图片 视频  音频）

expires 30d;   缓存30天 

location ~*  \.(jpg|png)$ {      ##location 匹配用户地址栏   (~)表示正则匹配  (*)表示不区分大小写   全文意思:  如果用户输入的 .jpg  或者.png 结尾的文件  那么保留本地30天
   expires 30d;    ##浏览器缓存本地30天
}

5：自定义报错页面

[root@proxy ~]# vim /usr/local/nginx/conf/nginx.conf
.. ..
error_page   404  /40x.html;    //自定义错误页面
.. ..
[root@proxy ~]# vim /usr/local/nginx/html/40x.html        //生成错误页面
Oops,No NO no page …

常见http状态码  200正常   301 永久重定向 302 临时重定向  401 用户名密码错误  403   客户端ip被拒绝 404 文件未找到 414 请求URL 头部过长 500服务器内部错误
502 bad gateway



步骤六：如何查看服务器状态信息  需要（--with-http_stub_status_module）模块

Example Configuration


location = /basic_status {
    stub_status;
    allow 192.168.4.5；  ##允许连接ip
    deny all;    ##拒绝所有
}


Active connections: 1   ##当前活动的连接数  并发量
server accepts  handled requests              
 5 5 14 
Reading: 0 Writing: 1 Waiting: 0



步骤七：对页面进行压缩处理

Example Configuration

http   {
gzip            on;        ## 开启压缩
gzip_min_length 1000;  ##小文件不压缩
gzip_comp_level 1;    ##压缩比率   
gzip_types      text/plain application/xml;   ## //对特定文件压缩，  类型参考mime.types           多媒体文件不适合压缩

}              nginx.conf 配置文件中的mime.types 的文件有参考